# general options
set-window-option -g mode-keys vi
set-option -g base-index 1

# C-b C-b for last active window
#bind-key C-b last-window
# C-b C-b to send prefix
bind-key C-b send-prefix

# non-login shell
set-option -g default-command $SHELL

#### PASTING
# All this needs `reattach-to-user-namespace` installed. Install with
# `brew install reattach-to-user-namespace`

set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

# mouse
set-option -g mouse on

# When a smaller terminal connects to a tmux client, it shrinks to fit it. The
# clients attached with bigger displays see this constrained view.
# aggressive-resize makes it such that the window is only resized if the smaller
# client is actively looking at it.
setw -g aggressive-resize on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\'') || tmux select-pane -l"

# hjkl, vim movements
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ctrl plus left and right arrows switch
bind -n C-Left prev
bind -n C-Right next

# Split commands
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Move windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Open new windows in the same directory as well
#bind c new-window -c '#{pane_current_path}'

# color
set -g default-terminal "screen-256color"

# Status Bar
set -g status-justify centre
set -g status-interval 1
set -g status-left-length 40
set -g status-right-length 40
set -g status-left "[#[fg=white]#H#[fg=default]]"
set -g status-right "[#[fg=white]%d.%m. #[fg=white,bright]%H:%M:%S#[default]]"

# tmux window titles for X
set -g set-titles on
set -g set-titles-string '#W [#S:#I.#P]'

# quick view of processes
bind a split-window "exec top"

# pass
bind-key C-p command-prompt "split-window 'exec pass %% | less'"

# reload config
bind r source-file ~/.tmux.conf\; display-message " âœ± ~/.tmux.conf is reloaded"

#### COLOUR

# default statusbar colors
set-option -g status-bg default
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
